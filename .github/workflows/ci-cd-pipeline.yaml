name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-cd
  cancel-in-progress: true

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Call setup action
        uses: ./.github/actions/provision
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          AWS_TF_BUCKET: ${{ vars.AWS_TF_BUCKET }}
          AWS_TF_KEY: ${{ vars.AWS_TF_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: provision
    if: ${{ needs.provision.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Call deploy action
        uses: ./.github/actions/deploy
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

  verify:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ needs.deploy.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Call verify action
        uses: ./.github/actions/verify
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

  chaos:
    runs-on: ubuntu-latest
    needs: verify
    if: ${{ needs.verify.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Call chaos action
        uses: ./.github/actions/chaos
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

  teardown:
    runs-on: ubuntu-latest
    needs: [chaos, verify, deploy, provision]
    if: ${{ needs.chaos.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Destroy AWS Resources
        uses: ./.github/actions/teardown
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_TF_BUCKET: ${{ vars.AWS_TF_BUCKET }}
          AWS_TF_KEY: ${{ vars.AWS_TF_KEY }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
