name: Apply Chaos
description: Run all Chaos Mesh experiments dynamically and validate recovery

inputs:
  AWS_ACCESS_KEY_ID:
    description: "AWS Access Key ID"
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: "AWS Secret Access Key"
    required: true
  AWS_REGION:
    description: "AWS Region"
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Set up kubeconfig
      shell: bash
      run: |
        aws eks update-kubeconfig --name ci-cd-cluster --region ${{ inputs.AWS_REGION }}

    - name: Run Chaos Experiments
      shell: bash
      run: |
        set -euo pipefail

        for experiment in ./chaos/*.yaml; do
          echo "============================================="
          echo " Running Chaos Experiment: $experiment"
          echo "============================================="

          echo "Pods before chaos:"
          kubectl get pods -n default

          echo "Applying chaos experiment: $experiment"
          kubectl apply -f "$experiment"

          echo "Waiting for system to experience failure..."
          sleep 20
          kubectl get pods -n default || true
          kubectl get events -n default --sort-by=.metadata.creationTimestamp | tail -n 20 || true

          echo "Waiting for system to recover..."
          sleep 40

          # STRICT validation â€” fail if rollout not complete
          echo "Validating recovery of deployment 'devops'..."
          if ! kubectl rollout status deployment/devops -n default --timeout=120s; then
            echo "Experiment $experiment FAILED: system did not recover"
            exit 1
          fi

          echo "Experiment $experiment PASSED: system recovered"

          echo "Cleaning up chaos experiment: $experiment"
          kubectl delete -f "$experiment" --ignore-not-found=true
        done
