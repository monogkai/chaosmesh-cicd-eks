name: Setup AWS Resources
description: Initializes Terraform with region/account inputs and builds/pushes Docker image to ECR.

inputs:
  AWS_ACCESS_KEY_ID:
    description: "AWS Access Key ID"
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: "AWS Secret Access Key"
    required: true
  AWS_REGION:
    description: "AWS Region"
    required: true
  AWS_ACCOUNT_ID:
    description: "AWS Account ID"
    required: true
  AWS_TF_BUCKET:
   description: "Terraform S3 Bucket Name"
   required: true
  AWS_TF_KEY:
   description: "Terraform S3 Bucket Key"
   required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Create terraform.tfvars file
      shell: bash
      working-directory: terraform
      run: |
        echo "aws_region = \"${{ inputs.AWS_REGION }}\"" > terraform.tfvars
        echo "aws_account_id = \"${{ inputs.AWS_ACCOUNT_ID }}\"" >> terraform.tfvars
        echo "aws_tf_bucket = \"${{ inputs.AWS_TF_BUCKET }}\"" >> terraform.tfvars
        echo "aws_tf_key = \"${{ inputs.AWS_TF_KEY }}\"" >> terraform.tfvars

    - name: Ensure Terraform backend S3 bucket exists
      shell: bash
      run: |
        aws s3api head-bucket --bucket ${{ inputs.AWS_TF_BUCKET }} 2>/dev/null || \
        aws s3api create-bucket \
          --bucket ${{ inputs.AWS_TF_BUCKET }} \
          --region ${{ inputs.AWS_REGION }} \
          --create-bucket-configuration LocationConstraint=${{ inputs.AWS_REGION }}

    - name: Terraform init and apply
      shell: bash
      working-directory: terraform
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.AWS_TF_BUCKET }}" \
          -backend-config="key=${{ inputs.AWS_TF_KEY }}" \
          -backend-config="region=${{ inputs.AWS_REGION }}"
        terraform apply -auto-approve

    - name: Log in to Amazon ECR
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ inputs.AWS_REGION }} | docker login --username AWS --password-stdin ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      shell: bash
      run: |
        docker build -t ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/app:latest ./app

    - name: Push Docker image to ECR
      shell: bash
      run: |
        docker push ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/app:latest
